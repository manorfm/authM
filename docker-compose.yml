version: '3.8'

services:
  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: user-manager-service
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - DB_HOST=postgres
  #     - DB_PORT=5432
  #     - DB_USER=postgres
  #     - DB_PASSWORD=postgres
  #     - DB_NAME=user_manager
  #     - DB_SSL_MODE=disable
  #     - SERVER_PORT=8080
  #     - JWT_SECRET=your-secret-key-here
  #     - JWT_EXPIRATION=24h
  #     - EMAIL_HOST=mailhog
  #     - EMAIL_PORT=1025
  #     - EMAIL_USERNAME=
  #     - EMAIL_PASSWORD=
  #     - EMAIL_FROM=noreply@example.com
  #     - VAULT_ADDR=http://vault:8200
  #     - VAULT_TOKEN=root
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     vault:
  #       condition: service_healthy
  #     mailhog:
  #       condition: service_started
  #   networks:
  #     - user-manager-network
  #   healthcheck:
  #     test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3
  #     start_period: 10s
  #   restart: unless-stopped

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=owner
      - POSTGRES_PASSWORD=ownerTest
      - POSTGRES_DB=users
    ports:
      - "5432:5432"
    volumes:
      - ./migrations/up:/docker-entrypoint-initdb.d
    networks:
      - user-manager-network
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U postgres"]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 5
    restart: unless-stopped

  vault:
    image: hashicorp/vault:1.15
    container_name: vault
    ports:
      - "8200:8200"
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=root
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    command: server -dev
    networks:
      - user-manager-network
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    networks:
      - user-manager-network
    restart: unless-stopped

networks:
  user-manager-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local